// Copyright 2022 xensik. All rights reserved.
//
// Use of this source code is governed by a GNU GPLv3 license
// that can be found in the LICENSE file.

#pragma once

#include "utils/xsk/utils.hpp"

#include "disassembler.hpp"
#include "resolver.hpp"
#include "context.hpp"

namespace xsk::gsc::iw9
{

constexpr std::uint32_t max_string_id = 0x1472F;

enum class opcode : std::uint8_t
{
    unk_000 = 0x00,
    unk_001 = 0x01,
    unk_002 = 0x02,
    unk_003 = 0x03,
    unk_004 = 0x04,
    unk_005 = 0x05,
    unk_006 = 0x06,
    unk_007 = 0x07,
    unk_008 = 0x08,
    unk_009 = 0x09,
    unk_010 = 0x0A,
    unk_011 = 0x0B,
    unk_012 = 0x0C,
    unk_013 = 0x0D,
    unk_014 = 0x0E,
    unk_015 = 0x0F,
    unk_016 = 0x10,
    unk_017 = 0x11,
    unk_018 = 0x12,
    unk_019 = 0x13,
    unk_020 = 0x14,
    unk_021 = 0x15,
    unk_022 = 0x16,
    unk_023 = 0x17,
    unk_024 = 0x18,
    unk_025 = 0x19,
    unk_026 = 0x1A,
    unk_027 = 0x1B,
    unk_028 = 0x1C,
    unk_029 = 0x1D,
    unk_030 = 0x1E,
    unk_031 = 0x1F,
    unk_032 = 0x20,
    unk_033 = 0x21,
    unk_034 = 0x22,
    unk_035 = 0x23,
    unk_036 = 0x24,
    unk_037 = 0x25,
    unk_038 = 0x26,
    unk_039 = 0x27,
    unk_040 = 0x28,
    unk_041 = 0x29,
    unk_042 = 0x2A,
    unk_043 = 0x2B,
    unk_044 = 0x2C,
    unk_045 = 0x2D,
    unk_046 = 0x2E,
    unk_047 = 0x2F,
    unk_048 = 0x30,
    unk_049 = 0x31,
    unk_050 = 0x32,
    unk_051 = 0x33,
    unk_052 = 0x34,
    unk_053 = 0x35,
    unk_054 = 0x36,
    unk_055 = 0x37,
    unk_056 = 0x38,
    unk_057 = 0x39,
    unk_058 = 0x3A,
    unk_059 = 0x3B,
    unk_060 = 0x3C,
    unk_061 = 0x3D,
    unk_062 = 0x3E,
    unk_063 = 0x3F,
    unk_064 = 0x40,
    unk_065 = 0x41,
    unk_066 = 0x42,
    unk_067 = 0x43,
    unk_068 = 0x44,
    unk_069 = 0x45,
    unk_070 = 0x46,
    unk_071 = 0x47,
    unk_072 = 0x48,
    unk_073 = 0x49,
    unk_074 = 0x4A,
    unk_075 = 0x4B,
    unk_076 = 0x4C,
    unk_077 = 0x4D,
    unk_078 = 0x4E,
    unk_079 = 0x4F,
    unk_080 = 0x50,
    unk_081 = 0x51,
    unk_082 = 0x52,
    unk_083 = 0x53,
    unk_084 = 0x54,
    unk_085 = 0x55,
    unk_086 = 0x56,
    unk_087 = 0x57,
    unk_088 = 0x58,
    unk_089 = 0x59,
    unk_090 = 0x5A,
    unk_091 = 0x5B,
    unk_092 = 0x5C,
    unk_093 = 0x5D,
    unk_094 = 0x5E,
    unk_095 = 0x5F,
    unk_096 = 0x60,
    unk_097 = 0x61,
    unk_098 = 0x62,
    unk_099 = 0x63,
    unk_100 = 0x64,
    unk_101 = 0x65,
    unk_102 = 0x66,
    unk_103 = 0x67,
    unk_104 = 0x68,
    unk_105 = 0x69,
    unk_106 = 0x6A,
    unk_107 = 0x6B,
    unk_108 = 0x6C,
    unk_109 = 0x6D,
    unk_110 = 0x6E,
    unk_111 = 0x6F,
    unk_112 = 0x70,
    unk_113 = 0x71,
    unk_114 = 0x72,
    unk_115 = 0x73,
    unk_116 = 0x74,
    unk_117 = 0x75,
    unk_118 = 0x76,
    unk_119 = 0x77,
    unk_120 = 0x78,
    unk_121 = 0x79,
    unk_122 = 0x7A,
    unk_123 = 0x7B,
    unk_124 = 0x7C,
    unk_125 = 0x7D,
    unk_126 = 0x7E,
    unk_127 = 0x7F,
    unk_128 = 0x80,
    unk_129 = 0x81,
    unk_130 = 0x82,
    unk_131 = 0x83,
    unk_132 = 0x84,
    unk_133 = 0x85,
    unk_134 = 0x86,
    unk_135 = 0x87,
    unk_136 = 0x88,
    unk_137 = 0x89,
    unk_138 = 0x8A,
    unk_139 = 0x8B,
    unk_140 = 0x8C,
    unk_141 = 0x8D,
    unk_142 = 0x8E,
    unk_143 = 0x8F,
    unk_144 = 0x90,
    unk_145 = 0x91,
    unk_146 = 0x92,
    unk_147 = 0x93,
    unk_148 = 0x94,
    unk_149 = 0x95,
    unk_150 = 0x96,
    unk_151 = 0x97,
    unk_152 = 0x98,
    unk_153 = 0x99,
    unk_154 = 0x9A,
    unk_155 = 0x9B,
    unk_156 = 0x9C,
    unk_157 = 0x9D,
    unk_158 = 0x9E,
    unk_159 = 0x9F,
    unk_160 = 0xA0,
    unk_161 = 0xA1,
    unk_162 = 0xA2,
    unk_163 = 0xA3,
    unk_164 = 0xA4,
    unk_165 = 0xA5,
    unk_166 = 0xA6,
    OP_count = 0xA7,
};

auto opcode_size(std::uint8_t op) -> std::uint32_t;

} // namespace xsk::gsc::iw9
